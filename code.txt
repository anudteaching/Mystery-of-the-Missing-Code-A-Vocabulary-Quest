[
  {
    "filename": "index.html",
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Vocabulary Adventure</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n\n<div id=\"game-container\">\n    <div id=\"dashboard\">\n        <div>Score: <span id=\"score\">0</span></div>\n        <div>Lives: <span id=\"lives\">5</span></div>\n    </div>\n\n    <!-- Character Selection -->\n    <div id=\"character-selection\" class=\"slide\" style=\"display: block;\">\n        <h2>Choose Your Character</h2>\n        <h3>Select your class:</h3>\n        <button class=\"character-button\" onclick=\"selectCharacter('hero', this)\">Hero</button>\n        <button class=\"character-button\" onclick=\"selectCharacter('mage', this)\">Mage</button>\n        <button class=\"character-button\" onclick=\"selectCharacter('healer', this)\">Healer</button>\n        <br><br>\n        <button class=\"button\" onclick=\"startGame()\">Start Adventure</button>\n         <div id=\"footer\">\n             Mr Anu Dissanayake @ FHS\n        </div>\n    </div>\n\n    <!-- Levels 1 to 6 -->\n    <div id=\"level1\" class=\"slide level\">\n        <h2>Level 1</h2>\n        <p>The adventure begins! A simple test to start...</p>\n        <div id=\"question-container-1\" class=\"question-container\"></div>\n        <button id=\"restart-button\" class=\"button\" onclick=\"restartGame()\">Restart Game</button>\n    </div>\n    <div id=\"level2\" class=\"slide level\">\n        <h2>Level 2</h2>\n        <p>The path gets a bit harder...</p>\n        <div id=\"question-container-2\" class=\"question-container\"></div>\n        <button id=\"restart-button\" class=\"button\" onclick=\"restartGame()\">Restart Game</button>\n    </div>\n    <div id=\"level3\" class=\"slide level\">\n        <h2>Level 3</h2>\n        <p>The path is getting more arduous...</p>\n        <div id=\"question-container-3\" class=\"question-container\"></div>\n        <button id=\"restart-button\" class=\"button\" onclick=\"restartGame()\">Restart Game</button>\n    </div>\n    <div id=\"level4\" class=\"slide level\">\n        <h2>Level 4</h2>\n        <p>The journey gets harder...</p>\n        <div id=\"question-container-4\" class=\"question-container\"></div>\n        <button id=\"restart-button\" class=\"button\" onclick=\"restartGame()\">Restart Game</button>\n    </div>\n    <div id=\"level5\" class=\"slide level\">\n        <h2>Level 5</h2>\n        <p>The journey is just getting started...</p>\n        <div id=\"question-container-5\" class=\"question-container\"></div>\n        <button id=\"restart-button\" class=\"button\" onclick=\"restartGame()\">Restart Game</button>\n    </div>\n     <div id=\"level6\" class=\"slide level\">\n        <h2>Level 6</h2>\n        <p>The final challenge of your journey!...</p>\n        <div id=\"question-container-6\" class=\"question-container\"></div>\n        <button id=\"restart-button\" class=\"button\" onclick=\"restartGame()\">Restart Game</button>\n    </div>\n\n    <!-- Game Over Screen -->\n    <div id=\"game-over\" class=\"slide\">\n        <h2>Game Over</h2>\n        <p>Your adventure has come to an end. Final Score: <span id=\"final-score\"></span></p>\n        <button class=\"button\" onclick=\"restartGame()\">Restart Game</button>\n    </div>\n\n    <!-- Restart Screen -->\n    <div id=\"restart\" class=\"slide\">\n        <h2>Restart Game</h2>\n        <p>Do you want to play again?</p>\n        <button class=\"button\" onclick=\"restartGame()\">Yes, Restart!</button>\n    </div>\n</div>\n\n<script src=\"script.js\"></script>\n</body>\n</html>\n"
  },
  {
    "filename": "style.css",
    "content": "/* General Styles */\nbody {\n    font-family: sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #DCD5E6;\n    color: #0B0B0B;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    font-size: 16px;\n}\n\n#game-container {\n    width: 80%;\n    max-width: 800px;\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n}\n\n.slide {\n    padding: 20px;\n    display: none;\n}\n\n.slide:target {\n    display: block;\n}\n\n/* Header/Dashboard Styles */\n#dashboard {\n    background-color: #6134AA;\n    color: #DCD5E6;\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 16px;\n    font-weight: bold;\n}\n\n#dashboard div {\n    font-size: 16px;\n}\n\n/* Button Styles */\n.button {\n    display: inline-block;\n    padding: 10px 20px;\n    background-color: #DCD5E6;\n    color: #0B0B0B;\n    text-decoration: none;\n    border-radius: 5px;\n    margin-top: 10px;\n    cursor: pointer;\n    border: none;\n    font-size: 16px;\n}\n\n.button:hover {\n    background-color: #A7A5AA;\n}\n\n/* Question Styles */\n.question-container {\n    margin-bottom: 20px;\n}\n\n.question-text {\n    font-size: 18px;\n    margin-bottom: 10px;\n}\n\n.answer-button {\n    display: block;\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 5px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    text-align: left;\n    cursor: pointer;\n    background-color: #DCD5E6;\n    color: #0B0B0B;\n}\n\n.answer-button:hover {\n    background-color: #A7A5AA;\n}\n\n/* Level Specific Styles */\n.level {\n    background: linear-gradient(rgba(97, 52, 170, 0.3), rgba(97, 52, 170, 0.3)), url('https://images.unsplash.com/photo-1541484483-577f066f8ab9?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8MHx8fA%3D%3D');\n    background-size: cover;\n    color: #0B0B0B;\n}\n\n/* Character Selection Styles */\n#character-selection {\n    text-align: center;\n}\n\n.character-button {\n    display: inline-block;\n    padding: 10px 20px;\n    background-color: #DCD5E6;\n    color: #0B0B0B;\n    text-decoration: none;\n    border-radius: 5px;\n    margin: 10px;\n    cursor: pointer;\n    border: none;\n    font-size: 16px;\n}\n\n.character-button:hover {\n    background-color: #A7A5AA;\n}\n\n.selected {\n    background-color: #4CAF50;\n    color: white;\n}\n\n/* Game Over Styles */\n#game-over {\n    text-align: center;\n}\n\n/* Restart Styles */\n#restart {\n    text-align: center;\n}\n\n/* Font sizes */\nh2 {\n    font-size: 25px;\n}\nh3 {\n    font-size: 22px;\n}\np {\n    font-size: 18px;\n}\n\n/* Restart Button Styles */\n#restart-button {\n    display: block;\n    width: 100%;\n    padding: 10px 20px;\n    background-color: #DCD5E6;\n    color: #0B0B0B;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 16px;\n    margin-top: 20px;\n}\n\n#restart-button:disabled {\n    background-color: #A7A5AA;\n    cursor: not-allowed;\n}\n\n/* Footer Style */\n#footer {\n    text-align: center;\n    font-size: 16px;\n    color: #0B0B0B;\n    background-color: #DCD5E6;\n    padding: 5px;\n    margin-top: 20px;\n}\n"
  },
  {
    "filename": "script.js",
    "content": "// Game State\nlet score = 0;\nlet lives = 5;\nlet currentLevel = 1;\nlet character = '';\nlet questionAnswered = false;\nlet askedQuestions = []; // Track questions asked in the game\n\n// Word Database\nconst wordDatabase = [\n    { word: \"Algorithm\", definition: \"A list of steps to finish a task.\", level: 1, incorrectAnswers: [\"A type of computer\", \"A dance move\", \"A kind of bird\"] },\n    { word: \"Bug\", definition: \"Part of a program that does not work correctly.\", level: 1, incorrectAnswers: [\"A small insect\", \"A feature, not a problem\", \"A type of food\"] },\n    { word: \"Debugging\", definition: \"Finding and fixing problems in an algorithm or program.\", level: 1, incorrectAnswers: [\"Creating new bugs\", \"Ignoring problems\", \"Deleting the program\"] },\n    { word: \"Sequencing\", definition: \"Putting commands in correct order so computers can read the commands.\", level: 1, incorrectAnswers: [\"Mixing up commands\", \"Deleting commands\", \"Ignoring commands\"] },\n    { word: \"Loop\", definition: \"The action of doing something over and over again.\", level: 1, incorrectAnswers: [\"Stopping an action\", \"A straight line\", \"Doing something once\"] },\n    { word: \"Repeat\", definition: \"To do something again.\", level: 1, incorrectAnswers: [\"To do something once\", \"To stop doing something\", \"To avoid doing something\"] },\n    { word: \"Event\", definition: \"An action that causes something to happen.\", level: 1, incorrectAnswers: [\"Nothing happens\", \"A static image\", \"A planned party\"] },\n    { word: \"Code\", definition: \"To write code, or to write instructions for a computer.\", level: 1, incorrectAnswers: [\"To draw pictures\", \"To sing a song\", \"To bake a cake\"] },\n\n    { word: \"Program\", definition: \"An algorithm that has been coded into something that can be run by a machine.\", level: 2, incorrectAnswers: [\"A list of instructions for humans\", \"A physical machine\", \"A type of dance\"] },\n    { word: \"Behavior\", definition: \"An action that a sprite performs continuously until it's told to stop.\", level: 2, incorrectAnswers: [\"A static image\", \"A one-time action\", \"A type of food\"] },\n    { word: \"Sprite\", definition: \"A graphic on the screen with a location, size, and appearance.\", level: 2, incorrectAnswers: [\"A type of drink\", \"A real person\", \"A hidden object\"] },\n    { word: \"Angle\", definition: \"Where two sides of a shape come together, measured in degrees.\", level: 2, incorrectAnswers: [\"A straight line\", \"A curved line\", \"The area of a shape\"] },\n    { word: \"Function\", definition: \"A piece of code that you can easily call over and over again.\", level: 2, incorrectAnswers: [\"A broken piece of code\", \"A comment in the code\", \"A secret code\"] },\n    { word: \"Variable\", definition: \"A label for a piece of information used in a program.\", level: 2, incorrectAnswers: [\"A fixed value\", \"A type of loop\", \"A type of bug\"] },\n    { word: \"Command\", definition: \"An instruction for the computer. Many commands put together make up algorithms and computer programs.\", level: 2, incorrectAnswers: [\"A question for the computer\", \"A suggestion for the computer\", \"A request to the computer\"] },\n    { word: \"Condition\", definition: \"Something a program checks to see if it is true before allowing an action.\", level: 2, incorrectAnswers: [\"A random event\", \"A guaranteed action\", \"A type of variable\"] },\n\n     { word: \"Programming\", definition: \"The art of creating a program.\", level: 3, incorrectAnswers: [\"The act of deleting a program\", \"The science of breaking computers\", \"The study of insects\"] },\n    { word: \"Persistence\", definition: \"Not giving up.\", level: 3, incorrectAnswers: [\"Giving up easily\", \"Ignoring problems\", \"Creating more problems\"] },\n    { word: \"Modify\", definition: \"Make partial or minor changes to something, typically so as to improve it.\", level: 3, incorrectAnswers: [\"Destroying something\", \"Ignoring something\", \"Leaving something unchanged\"] },\n    { word: \"Events\", definition: \"Actions or occurrences that trigger specific code blocks.\", level: 3, incorrectAnswers: [\"Actions that don't trigger anything\", \"Static images\", \"Planned parties\"] },\n    { word: \"Functions\", definition: \"Reusable code blocks for specific tasks.\", level: 3, incorrectAnswers: [\"Blocks of code that do nothing\", \"Comments in the code\", \"Secrets in the code\"] },\n    { word: \"Loops\", definition: \"Repeating instruction sequences multiple times.\", level: 3, incorrectAnswers: [\"Sequences of instructions that run once\", \"Sequences of instructions that stop immediately\", \"Sequences of instructions that are ignored\"] },\n    { word: \"Conditionals\", definition: \"Statements that only run under certain conditions.\", level: 3, incorrectAnswers: [\"Statements that always run\", \"Statements that never run\", \"Statements that run randomly\"] },\n    { word: \"While Loop\", definition: \"Loop repeating while a condition is true.\", level: 3, incorrectAnswers: [\"A loop that runs once\", \"A loop that runs forever\", \"A loop that stops immediately\"] },\n    { word: \"Until\", definition: \"Command to do something until a condition is true.\", level: 3, incorrectAnswers: [\"A command that makes something false\", \"A command that does nothing\", \"A command that runs forever\"] },\n    { word: \"Define\", definition: \"Clarify problem details.\", level: 3, incorrectAnswers: [\"Ignore the details\", \"Create more problems\", \"Make something up\"] },\n    { word: \"Prepare\", definition: \"Research, plan, and get materials ready.\", level: 3, incorrectAnswers: [\"Do no research\", \"Don't plan anything\", \"Use no materials\"] },\n    { word: \"Reflect\", definition: \"Carefully review past actions.\", level: 3, incorrectAnswers: [\"Don't think back\", \"Repeat the same mistakes\", \"Ignore the outcome\"] },\n    { word: \"Try\", definition: \"Attempt to do something.\", level: 3, incorrectAnswers: [\"Avoid doing anything\", \"Assume you can't do it\", \"Don't even start\"] },\n\n    { word: \"Programming\", definition: \"The art of creating a program.\", level: 4, incorrectAnswers: [\"The act of deleting a program\", \"The science of breaking computers\", \"The study of insects\"] },\n    { word: \"Persistence\", definition: \"Not giving up.\", level: 4, incorrectAnswers: [\"Giving up easily\", \"Ignoring problems\", \"Creating more problems\"] },\n    { word: \"Modify\", definition: \"Make partial or minor changes to something, typically so as to improve it.\", level: 4, incorrectAnswers: [\"Destroying something\", \"Ignoring something\", \"Leaving something unchanged\"] },\n    { word: \"Events\", definition: \"Actions or occurrences that trigger specific code blocks.\", level: 4, incorrectAnswers: [\"Actions that don't trigger anything\", \"Static images\", \"Planned parties\"] },\n    { word: \"Functions\", definition: \"Reusable code blocks for specific tasks.\", level: 4, incorrectAnswers: [\"Blocks of code that do nothing\", \"Comments in the code\", \"Secrets in the code\"] },\n    { word: \"Loops\", definition: \"Repeating instruction sequences multiple times.\", level: 4, incorrectAnswers: [\"Sequences of instructions that run once\", \"Sequences of instructions that stop immediately\", \"Sequences of instructions that are ignored\"] },\n    { word: \"Conditionals\", definition: \"Statements that only run under certain conditions.\", level: 4, incorrectAnswers: [\"Statements that always run\", \"Statements that never run\", \"Statements that run randomly\"] },\n    { word: \"While Loop\", definition: \"Loop repeating while a condition is true.\", level: 4, incorrectAnswers: [\"A loop that runs once\", \"A loop that runs forever\", \"A loop that stops immediately\"] },\n    { word: \"Until\", definition: \"Command to do something until a condition is true.\", level: 4, incorrectAnswers: [\"A command that makes something false\", \"A command that does nothing\", \"A command that runs forever\"] },\n    { word: \"Define\", definition: \"Clarify problem details.\", level: 4, incorrectAnswers: [\"Ignore the details\", \"Create more problems\", \"Make something up\"] },\n    { word: \"Prepare\", definition: \"Research, plan, and get materials ready.\", level: 4, incorrectAnswers: [\"Do no research\", \"Don't plan anything\", \"Use no materials\"] },\n    { word: \"Reflect\", definition: \"Carefully review past actions.\", level: 4, incorrectAnswers: [\"Don't think back\", \"Repeat the same mistakes\", \"Ignore the outcome\"] },\n    { word: \"Try\", definition: \"Attempt to do something.\", level: 4, incorrectAnswers: [\"Avoid doing anything\", \"Assume you can't do it\", \"Don't even start\"] },\n\n    { word: \"Programming\", definition: \"The art of creating a program.\", level: 5, incorrectAnswers: [\"The act of deleting a program\", \"The science of breaking computers\", \"The study of insects\"] },\n    { word: \"Persistence\", definition: \"Not giving up.\", level: 5, incorrectAnswers: [\"Giving up easily\", \"Ignoring problems\", \"Creating more problems\"] },\n    { word: \"Modify\", definition: \"Make partial or minor changes to something, typically so as to improve it.\", level: 5, incorrectAnswers: [\"Destroying something\", \"Ignoring something\", \"Leaving something unchanged\"] },\n    { word: \"Events\", definition: \"Actions or occurrences that trigger specific code blocks.\", level: 5, incorrectAnswers: [\"Actions that don't trigger anything\", \"Static images\", \"Planned parties\"] },\n    { word: \"Functions\", definition: \"Reusable code blocks for specific tasks.\", level: 5, incorrectAnswers: [\"Blocks of code that do nothing\", \"Comments in the code\", \"Secrets in the code\"] },\n    { word: \"Loops\", definition: \"Repeating instruction sequences multiple times.\", level: 5, incorrectAnswers: [\"Sequences of instructions that run once\", \"Sequences of instructions that stop immediately\", \"Sequences of instructions that are ignored\"] },\n    { word: \"Conditionals\", definition: \"Statements that only run under certain conditions.\", level: 5, incorrectAnswers: [\"Statements that always run\", \"Statements that never run\", \"Statements that run randomly\"] },\n    { word: \"While Loop\", definition: \"Loop repeating while a condition is true.\", level: 5, incorrectAnswers: [\"A loop that runs once\", \"A loop that runs forever\", \"A loop that stops immediately\"] },\n    { word: \"Until\", definition: \"Command to do something until a condition is true.\", level: 5, incorrectAnswers: [\"A command that makes something false\", \"A command that does nothing\", \"A command that runs forever\"] },\n    { word: \"Define\", definition: \"Clarify problem details.\", level: 5, incorrectAnswers: [\"Ignore the details\", \"Create more problems\", \"Make something up\"] },\n    { word: \"Prepare\", definition: \"Research, plan, and get materials ready.\", level: 5, incorrectAnswers: [\"Do no research\", \"Don't plan anything\", \"Use no materials\"] },\n    { word: \"Reflect\", definition: \"Carefully review past actions.\", level: 5, incorrectAnswers: [\"Don't think back\", \"Repeat the same mistakes\", \"Ignore the outcome\"] },\n    { word: \"Try\", definition: \"Attempt to do something.\", level: 5, incorrectAnswers: [\"Avoid doing anything\", \"Assume you can't do it\", \"Don't even start\"] },\n// The following is level 6's questions\n    { word: \"Programming\", definition: \"The art of creating a program.\", level: 6, incorrectAnswers: [\"The act of deleting a program\", \"The science of breaking computers\", \"The study of insects\"] },\n    { word: \"Persistence\", definition: \"Not giving up.\", level: 6, incorrectAnswers: [\"Giving up easily\", \"Ignoring problems\", \"Creating more problems\"] },\n    { word: \"Modify\", definition: \"Make partial or minor changes to something, typically so as to improve it.\", level: 6, incorrectAnswers: [\"Destroying something\", \"Ignoring something\", \"Leaving something unchanged\"] },\n    { word: \"Events\", definition: \"Actions or occurrences that trigger specific code blocks.\", level: 6, incorrectAnswers: [\"Actions that don't trigger anything\", \"Static images\", \"Planned parties\"] },\n    { word: \"Functions\", definition: \"Reusable code blocks for specific tasks.\", level: 6, incorrectAnswers: [\"Blocks of code that do nothing\", \"Comments in the code\", \"Secrets in the code\"] },\n    { word: \"Loops\", definition: \"Repeating instruction sequences multiple times.\", level: 6, incorrectAnswers: [\"Sequences of instructions that run once\", \"Sequences of instructions that stop immediately\", \"Sequences of instructions that are ignored\"] },\n    { word: \"Conditionals\", definition: \"Statements that only run under certain conditions.\", level: 6, incorrectAnswers: [\"Statements that always run\", \"Statements that never run\", \"Statements that run randomly\"] },\n    { word: \"While Loop\", definition: \"Loop repeating while a condition is true.\", level: 6, incorrectAnswers: [\"A loop that runs once\", \"A loop that runs forever\", \"A loop that stops immediately\"] },\n    { word: \"Until\", definition: \"Command to do something until a condition is true.\", level: 6, incorrectAnswers: [\"A command that makes something false\", \"A command that does nothing\", \"A command that runs forever\"] },\n    { word: \"Define\", definition: \"Clarify problem details.\", level: 6, incorrectAnswers: [\"Ignore the details\", \"Create more problems\", \"Make something up\"] },\n    { word: \"Prepare\", definition: \"Research, plan, and get materials ready.\", level: 6, incorrectAnswers: [\"Do no research\", \"Don't plan anything\", \"Use no materials\"] },\n    { word: \"Reflect\", definition: \"Carefully review past actions.\", level: 6, incorrectAnswers: [\"Don't think back\", \"Repeat the same mistakes\", \"Ignore the outcome\"] },\n    { word: \"Try\", definition: \"Attempt to do something.\", level: 6, incorrectAnswers: [\"Avoid doing anything\", \"Assume you can't do it\", \"Don't even start\"] },\n];\n\nlet currentQuestion = null; // Store the current question\nlet timer;\n    // Function to select a character\n    function selectCharacter(selectedCharacter, element) {\n        // Remove 'selected' class from all character buttons\n        const buttons = document.querySelectorAll('.character-button');\n        buttons.forEach(button => button.classList.remove('selected'));\n\n        // Add 'selected' class to the clicked button\n        element.classList.add('selected');\n\n        character = selectedCharacter;\n    }\n\n    // Function to update the dashboard\n    function updateDashboard() {\n        document.getElementById(\"score\").innerText = score;\n        document.getElementById(\"lives\").innerText = lives;\n    }\n    // Function to generate a single question for a level\n    function generateQuestion(level) {\n         let levelWords = wordDatabase.filter(word => word.level === level);\n\n        // Filter out already asked questions\n        levelWords = levelWords.filter(wordData => !askedQuestions.includes(wordData.word));\n\n        if (levelWords.length === 0) {\n            console.warn(`No new words left for level ${level}. Resetting asked questions.`);\n             askedQuestions = []; // Clear the askedQuestions array if no new words are available\n             levelWords = wordDatabase.filter(word => word.level === level); // Reload all words for the level\n              levelWords = levelWords.filter(wordData => !askedQuestions.includes(wordData.word)); // Ensure no immediate repeats after reset\n             if (levelWords.length === 0) {\n                   console.error(`Still no words after reset for level ${level}! Something is wrong. Please increase the number of question in the array`);\n              return; // Exit if still no words after reset (avoid infinite loop)\n          }\n        }\n        const wordData = levelWords[Math.floor(Math.random() * levelWords.length)];\n        const correctAnswer = wordData.definition;\n        const incorrectAnswers = [...wordData.incorrectAnswers];\n        const answers = [correctAnswer, ...incorrectAnswers];\n\n        // Shuffle answers\n        answers.sort(() => Math.random() - 0.5);\n\n        const questionDiv = document.createElement('div');\n        questionDiv.classList.add('question');\n        questionDiv.innerHTML = `<div class=\"question-text\">What does \"${wordData.word}\" mean?</div>`;\n\n        answers.forEach(answer => {\n            const button = document.createElement('button');\n            button.classList.add('answer-button');\n            button.innerText = answer;\n            button.onclick = () => checkAnswer(answer, correctAnswer, level, button,wordData.word);\n            questionDiv.appendChild(button);\n        });\n\n        // Store the current question data\n        currentQuestion = {\n            correctAnswer: correctAnswer,\n            level: level\n        };\n\n        const questionContainer = document.getElementById(`question-container-${level}`);\n        questionContainer.innerHTML = ''; // Clear previous question\n        questionContainer.appendChild(questionDiv);\n\n        // Enable the \"Restart\" button after the question is loaded\n        document.getElementById(\"restart-button\").disabled = false;\n        questionAnswered = false;\n    }\n    // Function to check the answer\n   function checkAnswer(selectedAnswer, correctAnswer, level, button, word) {\n        const isCorrect = selectedAnswer === correctAnswer;\n        const restartButton = document.getElementById(\"restart-button\");\n\n        // Disable all answer buttons immediately\n        const buttons = document.querySelectorAll(`#question-container-${level} .answer-button`);\n        buttons.forEach(btn => btn.disabled = true);\n\n        if (isCorrect) {\n            score += 10;\n            button.style.backgroundColor = \"green\";\n              askedQuestions.push(word);  // Track the word as asked\n        } else {\n            lives--;\n            score -= 5;\n            button.style.backgroundColor = \"red\";\n\n            // Find the correct answer and make its background green\n            buttons.forEach(btn => {\n                if (btn.innerText === correctAnswer) {\n                    btn.style.backgroundColor = \"green\";\n                }\n            });\n\n             if (score <= 0) {\n                score = 0;\n                if (lives > 0) {\n                    lives--; // Reduce lives to 1 if score goes to zero\n                }\n                updateDashboard();\n                 if (lives <= 0) {\n                     //Show Game Over if the lives are zero.\n                         gameOver();\n                    }\n            }\n        }\n\n        updateDashboard();\n\n        // Automatically enable the Restart button after answering\n        restartButton.disabled = false;\n        questionAnswered = true;\n\n         // Clear any existing timer before setting a new one\n        clearTimeout(timer);\n\n        // Setting Timer if the answer is correct or wrong for an automatic transition to the next slide.\n        timer = setTimeout(() => {\n            nextSlide();\n        }, 2000); // 2-second pause\n    }\n// Function to start the game and go to Level 1\n    function startGame() {\n        // Hide character selection\n        document.getElementById(\"character-selection\").style.display = 'none';\n        // Show Level 1\n        document.getElementById(\"level1\").style.display = 'block';\n        // Generate the first question for Level 1\n        generateQuestion(1);\n    }\n\n     // Function to move to the next slide\n    function nextSlide() {\n            // Reset answer button styling\n            resetAnswerButtonStyles(currentLevel);\n\n        const level = currentLevel;\n\n        // Check if the game is finished\n        if (currentLevel <= 6) {\n            // Move to the next level\n            document.getElementById(`level${level}`).style.display = 'none';\n            currentLevel++;\n\n           //Show Game Over if the current level is above 6.\n            if(currentLevel <=6){\n                 document.getElementById(`level${currentLevel}`).style.display = 'block';\n                  generateQuestion(currentLevel);\n            }\n            else{\n              endGame();\n           }\n     }\n }\n    //Function to reset answer button styles\n    function resetAnswerButtonStyles(level) {\n        const buttons = document.querySelectorAll(`#question-container-${level} .answer-button`);\n        buttons.forEach(button => {\n            button.style.backgroundColor = \"\"; // Remove background color\n            button.disabled = false; // Enable the button\n        });\n    }\n     // Function to end the game\n    function endGame() {\n        document.getElementById(`level${currentLevel-1}`).style.display = 'none';\n        document.getElementById(\"game-over\").style.display = 'block';\n        document.getElementById(\"final-score\").innerText = score;\n        console.log(`Game Over. Final Score: ${score}`);\n    }\n    // Function to handle game over\n    function gameOver() {\n            // Hide all levels\n     /*   for (let i = 1; i <= 6; i++) {\n            document.getElementById(`level${i}`).style.display = 'none';\n        }\n        // Show Game Over\n        document.getElementById(`level${currentLevel-1}`).style.display = 'none';\n        document.getElementById(\"game-over\").style.display = 'block';\n         document.getElementById(\"final-score\").innerText = score; */\n         endGame();\n    }\n    // Function to restart the game\n    function restartGame() {\n        score = 0;\n        lives = 5;\n        currentLevel = 1;\n        updateDashboard();\n        clearTimeout(timer);  // Clear timeout before restarting\n       askedQuestions = [];  // Clear asked questions array\n        // Hide all levels\n         for (let i = 1; i <= 6; i++) {\n            document.getElementById(`level${i}`).style.display = 'none';\n        }\n\n        document.getElementById(\"game-over\").style.display = 'none';\n        document.getElementById(\"restart\").style.display = 'none';\n        document.getElementById(\"character-selection\").style.display = 'block';\n\n         // Remove 'selected' class from all character buttons\n        const buttons = document.querySelectorAll('.character-button');\n        buttons.forEach(button => button.classList.remove('selected'));\n    }\n\n    // Initial game setup\n    updateDashboard();\n    // Initially show the character selection screen\n    document.getElementById(\"character-selection\").style.display = 'block';\n    // Hide other levels\n     for (let i = 1; i <= 6; i++) {\n            document.getElementById(`level${i}`).style.display = 'none';\n        }\n    document.getElementById(\"game-over\").style.display = 'none';\n    document.getElementById(\"restart\").style.display = 'none';\n"
  }
]